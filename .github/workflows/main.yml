name: meteocheck
on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image to Dockerhub
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: angele745/meteocheck:latest
      - name: Build Docker image
        run: docker build -t meteocheck:latest .

      - name: Push Docker image
        run: docker push angele745/meteocheck:latest

      - name: 'Docker Login'
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }} 
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: 'Build and Push Image'
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.REGISTRY_LOGIN_SERVER }}/20210242:${{ github.sha }}

      - name: 'Deploy to Azure Container Instances'
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: devops-20210242
          image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/20210242:${{ github.sha }}
          registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: 20210242
          secure-environment-variables: API_KEY=${{secrets.OPENWEATHER_API_KEY}}
          location: 'francesouth'
          ports: 8081
